// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: treat.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Treat represents a reward or treat given to a user
type Treat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                        // Unique identifier
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                  // ID of the user who received the treat
	TreatType     string                 `protobuf:"bytes,3,opt,name=treat_type,json=treatType,proto3" json:"treat_type,omitempty"`                                                         // Type/category of the treat
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                                                                  // Human-readable title
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                                                      // Description of the treat
	Points        int32                  `protobuf:"varint,6,opt,name=points,proto3" json:"points,omitempty"`                                                                               // Point value of the treat
	ImageUrl      string                 `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                                                            // Optional image URL
	AwardedBy     string                 `protobuf:"bytes,8,opt,name=awarded_by,json=awardedBy,proto3" json:"awarded_by,omitempty"`                                                         // User ID who awarded the treat (empty for system)
	ApplicationId string                 `protobuf:"bytes,9,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`                                             // ID of the application this treat is associated with
	Metadata      map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	AwardedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=awarded_at,json=awardedAt,proto3" json:"awarded_at,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Optional expiration time
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Treat) Reset() {
	*x = Treat{}
	mi := &file_treat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Treat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Treat) ProtoMessage() {}

func (x *Treat) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Treat.ProtoReflect.Descriptor instead.
func (*Treat) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{0}
}

func (x *Treat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Treat) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Treat) GetTreatType() string {
	if x != nil {
		return x.TreatType
	}
	return ""
}

func (x *Treat) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Treat) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Treat) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Treat) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Treat) GetAwardedBy() string {
	if x != nil {
		return x.AwardedBy
	}
	return ""
}

func (x *Treat) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *Treat) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Treat) GetAwardedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AwardedAt
	}
	return nil
}

func (x *Treat) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Treat) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Treat) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Request to award a treat to a user
type AwardTreatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                 // ID of the user to award the treat to
	TreatType     string                 `protobuf:"bytes,2,opt,name=treat_type,json=treatType,proto3" json:"treat_type,omitempty"`                                                        // Type/category of the treat
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                                                                 // Human-readable title
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                                     // Description of the treat
	Points        int32                  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`                                                                              // Point value of the treat
	ImageUrl      string                 `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                                                           // Optional image URL
	AwardedBy     string                 `protobuf:"bytes,7,opt,name=awarded_by,json=awardedBy,proto3" json:"awarded_by,omitempty"`                                                        // User ID who is awarding the treat (empty for system)
	ApplicationId string                 `protobuf:"bytes,8,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`                                            // ID of the application this treat is associated with
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                                                       // Optional expiration time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwardTreatRequest) Reset() {
	*x = AwardTreatRequest{}
	mi := &file_treat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwardTreatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardTreatRequest) ProtoMessage() {}

func (x *AwardTreatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardTreatRequest.ProtoReflect.Descriptor instead.
func (*AwardTreatRequest) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{1}
}

func (x *AwardTreatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AwardTreatRequest) GetTreatType() string {
	if x != nil {
		return x.TreatType
	}
	return ""
}

func (x *AwardTreatRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AwardTreatRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AwardTreatRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *AwardTreatRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AwardTreatRequest) GetAwardedBy() string {
	if x != nil {
		return x.AwardedBy
	}
	return ""
}

func (x *AwardTreatRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *AwardTreatRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AwardTreatRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Response containing a single treat
type TreatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Treat         *Treat                 `protobuf:"bytes,2,opt,name=treat,proto3" json:"treat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreatResponse) Reset() {
	*x = TreatResponse{}
	mi := &file_treat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatResponse) ProtoMessage() {}

func (x *TreatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatResponse.ProtoReflect.Descriptor instead.
func (*TreatResponse) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{2}
}

func (x *TreatResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TreatResponse) GetTreat() *Treat {
	if x != nil {
		return x.Treat
	}
	return nil
}

// Request to get a treat by ID
type GetTreatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Treat ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTreatRequest) Reset() {
	*x = GetTreatRequest{}
	mi := &file_treat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTreatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreatRequest) ProtoMessage() {}

func (x *GetTreatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreatRequest.ProtoReflect.Descriptor instead.
func (*GetTreatRequest) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{3}
}

func (x *GetTreatRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to update a treat
type UpdateTreatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // Treat ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                                 // Updated title
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                     // Updated description
	Points        int32                  `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`                                                                              // Updated point value
	ImageUrl      string                 `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                                                           // Updated image URL
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Updated metadata
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                                                        // Updated expiration time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTreatRequest) Reset() {
	*x = UpdateTreatRequest{}
	mi := &file_treat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTreatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTreatRequest) ProtoMessage() {}

func (x *UpdateTreatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTreatRequest.ProtoReflect.Descriptor instead.
func (*UpdateTreatRequest) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTreatRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTreatRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTreatRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTreatRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *UpdateTreatRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UpdateTreatRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateTreatRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Request to delete a treat
type DeleteTreatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Treat ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTreatRequest) Reset() {
	*x = DeleteTreatRequest{}
	mi := &file_treat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTreatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTreatRequest) ProtoMessage() {}

func (x *DeleteTreatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTreatRequest.ProtoReflect.Descriptor instead.
func (*DeleteTreatRequest) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTreatRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to list treats with filtering
type ListTreatsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                          // Filter by user ID
	TreatType      string                 `protobuf:"bytes,2,opt,name=treat_type,json=treatType,proto3" json:"treat_type,omitempty"`                 // Filter by treat type
	ApplicationId  string                 `protobuf:"bytes,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`     // Filter by application ID
	FromDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`                    // Filter by award date (inclusive)
	ToDate         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`                          // Filter by award date (inclusive)
	IncludeExpired bool                   `protobuf:"varint,6,opt,name=include_expired,json=includeExpired,proto3" json:"include_expired,omitempty"` // Whether to include expired treats
	MinPoints      int32                  `protobuf:"varint,7,opt,name=min_points,json=minPoints,proto3" json:"min_points,omitempty"`                // Minimum point value
	MaxPoints      int32                  `protobuf:"varint,8,opt,name=max_points,json=maxPoints,proto3" json:"max_points,omitempty"`                // Maximum point value
	Page           int32                  `protobuf:"varint,9,opt,name=page,proto3" json:"page,omitempty"`                                           // Page number for pagination (1-based)
	PageSize       int32                  `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                  // Number of items per page
	SortBy         string                 `protobuf:"bytes,11,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`                         // Field to sort by (e.g., "awarded_at", "points")
	SortDesc       bool                   `protobuf:"varint,12,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`                  // Whether to sort in descending order
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListTreatsRequest) Reset() {
	*x = ListTreatsRequest{}
	mi := &file_treat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTreatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreatsRequest) ProtoMessage() {}

func (x *ListTreatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreatsRequest.ProtoReflect.Descriptor instead.
func (*ListTreatsRequest) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{6}
}

func (x *ListTreatsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListTreatsRequest) GetTreatType() string {
	if x != nil {
		return x.TreatType
	}
	return ""
}

func (x *ListTreatsRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ListTreatsRequest) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *ListTreatsRequest) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *ListTreatsRequest) GetIncludeExpired() bool {
	if x != nil {
		return x.IncludeExpired
	}
	return false
}

func (x *ListTreatsRequest) GetMinPoints() int32 {
	if x != nil {
		return x.MinPoints
	}
	return 0
}

func (x *ListTreatsRequest) GetMaxPoints() int32 {
	if x != nil {
		return x.MaxPoints
	}
	return 0
}

func (x *ListTreatsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTreatsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTreatsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListTreatsRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// Response containing a list of treats
type ListTreatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Treats        []*Treat               `protobuf:"bytes,2,rep,name=treats,proto3" json:"treats,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTreatsResponse) Reset() {
	*x = ListTreatsResponse{}
	mi := &file_treat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTreatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreatsResponse) ProtoMessage() {}

func (x *ListTreatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreatsResponse.ProtoReflect.Descriptor instead.
func (*ListTreatsResponse) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{7}
}

func (x *ListTreatsResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListTreatsResponse) GetTreats() []*Treat {
	if x != nil {
		return x.Treats
	}
	return nil
}

func (x *ListTreatsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTreatsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTreatsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Request to get a summary of treats for a user
type GetUserTreatsSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // User ID
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"` // Optional: Filter by application ID
	FromDate      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`                // Optional: Start date for the summary period
	ToDate        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`                      // Optional: End date for the summary period
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTreatsSummaryRequest) Reset() {
	*x = GetUserTreatsSummaryRequest{}
	mi := &file_treat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTreatsSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTreatsSummaryRequest) ProtoMessage() {}

func (x *GetUserTreatsSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTreatsSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetUserTreatsSummaryRequest) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserTreatsSummaryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserTreatsSummaryRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *GetUserTreatsSummaryRequest) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *GetUserTreatsSummaryRequest) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

// Summary of treats for a user
type TreatsSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                                                // User ID
	TotalTreats   int32                  `protobuf:"varint,2,opt,name=total_treats,json=totalTreats,proto3" json:"total_treats,omitempty"`                                                                                // Total number of treats
	TotalPoints   int32                  `protobuf:"varint,3,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`                                                                                // Total points from all treats
	PointsByType  map[string]int32       `protobuf:"bytes,4,rep,name=points_by_type,json=pointsByType,proto3" json:"points_by_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Points grouped by treat type
	RecentTreats  []*Treat               `protobuf:"bytes,5,rep,name=recent_treats,json=recentTreats,proto3" json:"recent_treats,omitempty"`                                                                              // Most recent treats
	FromDate      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`                                                                                          // Start of the summary period
	ToDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`                                                                                                // End of the summary period
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreatsSummary) Reset() {
	*x = TreatsSummary{}
	mi := &file_treat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatsSummary) ProtoMessage() {}

func (x *TreatsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatsSummary.ProtoReflect.Descriptor instead.
func (*TreatsSummary) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{9}
}

func (x *TreatsSummary) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TreatsSummary) GetTotalTreats() int32 {
	if x != nil {
		return x.TotalTreats
	}
	return 0
}

func (x *TreatsSummary) GetTotalPoints() int32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

func (x *TreatsSummary) GetPointsByType() map[string]int32 {
	if x != nil {
		return x.PointsByType
	}
	return nil
}

func (x *TreatsSummary) GetRecentTreats() []*Treat {
	if x != nil {
		return x.RecentTreats
	}
	return nil
}

func (x *TreatsSummary) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *TreatsSummary) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

// Response containing a treats summary
type TreatsSummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Summary       *TreatsSummary         `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreatsSummaryResponse) Reset() {
	*x = TreatsSummaryResponse{}
	mi := &file_treat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatsSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatsSummaryResponse) ProtoMessage() {}

func (x *TreatsSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatsSummaryResponse.ProtoReflect.Descriptor instead.
func (*TreatsSummaryResponse) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{10}
}

func (x *TreatsSummaryResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TreatsSummaryResponse) GetSummary() *TreatsSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// Request to get treat statistics
type GetTreatStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"` // Optional: Filter by application ID
	FromDate      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`                // Start date for the stats period
	ToDate        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`                      // End date for the stats period
	GroupBy       string                 `protobuf:"bytes,4,opt,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`                   // How to group the stats (e.g., "day", "week", "month", "treat_type")
	UserIds       []string               `protobuf:"bytes,5,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`                   // Optional: Filter by user IDs
	TreatTypes    []string               `protobuf:"bytes,6,rep,name=treat_types,json=treatTypes,proto3" json:"treat_types,omitempty"`          // Optional: Filter by treat types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTreatStatsRequest) Reset() {
	*x = GetTreatStatsRequest{}
	mi := &file_treat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTreatStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreatStatsRequest) ProtoMessage() {}

func (x *GetTreatStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreatStatsRequest.ProtoReflect.Descriptor instead.
func (*GetTreatStatsRequest) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{11}
}

func (x *GetTreatStatsRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *GetTreatStatsRequest) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *GetTreatStatsRequest) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *GetTreatStatsRequest) GetGroupBy() string {
	if x != nil {
		return x.GroupBy
	}
	return ""
}

func (x *GetTreatStatsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *GetTreatStatsRequest) GetTreatTypes() []string {
	if x != nil {
		return x.TreatTypes
	}
	return nil
}

// Statistics about treats
type TreatStats struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	DataPoints    []*TreatStats_DataPoint `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`                                                                                    // Data points for the stats
	TotalTreats   int32                   `protobuf:"varint,2,opt,name=total_treats,json=totalTreats,proto3" json:"total_treats,omitempty"`                                                                                // Total number of treats
	TotalPoints   int32                   `protobuf:"varint,3,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`                                                                                // Total points
	UniqueUsers   int32                   `protobuf:"varint,4,opt,name=unique_users,json=uniqueUsers,proto3" json:"unique_users,omitempty"`                                                                                // Number of unique users with treats
	PointsByType  map[string]int32        `protobuf:"bytes,5,rep,name=points_by_type,json=pointsByType,proto3" json:"points_by_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Points grouped by treat type
	FromDate      *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`                                                                                          // Start of the stats period
	ToDate        *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`                                                                                                // End of the stats period
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreatStats) Reset() {
	*x = TreatStats{}
	mi := &file_treat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatStats) ProtoMessage() {}

func (x *TreatStats) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatStats.ProtoReflect.Descriptor instead.
func (*TreatStats) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{12}
}

func (x *TreatStats) GetDataPoints() []*TreatStats_DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *TreatStats) GetTotalTreats() int32 {
	if x != nil {
		return x.TotalTreats
	}
	return 0
}

func (x *TreatStats) GetTotalPoints() int32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

func (x *TreatStats) GetUniqueUsers() int32 {
	if x != nil {
		return x.UniqueUsers
	}
	return 0
}

func (x *TreatStats) GetPointsByType() map[string]int32 {
	if x != nil {
		return x.PointsByType
	}
	return nil
}

func (x *TreatStats) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *TreatStats) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

// Response containing treat statistics
type TreatStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Stats         *TreatStats            `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreatStatsResponse) Reset() {
	*x = TreatStatsResponse{}
	mi := &file_treat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatStatsResponse) ProtoMessage() {}

func (x *TreatStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatStatsResponse.ProtoReflect.Descriptor instead.
func (*TreatStatsResponse) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{13}
}

func (x *TreatStatsResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TreatStatsResponse) GetStats() *TreatStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type TreatStats_DataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`                                                                                                                // Label for the data point (e.g., date, treat type)
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                                                                                                               // Number of treats
	TotalPoints   int32                  `protobuf:"varint,3,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`                                                                                // Total points
	PointsByType  map[string]int32       `protobuf:"bytes,4,rep,name=points_by_type,json=pointsByType,proto3" json:"points_by_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Points by treat type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreatStats_DataPoint) Reset() {
	*x = TreatStats_DataPoint{}
	mi := &file_treat_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatStats_DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatStats_DataPoint) ProtoMessage() {}

func (x *TreatStats_DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_treat_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatStats_DataPoint.ProtoReflect.Descriptor instead.
func (*TreatStats_DataPoint) Descriptor() ([]byte, []int) {
	return file_treat_proto_rawDescGZIP(), []int{12, 0}
}

func (x *TreatStats_DataPoint) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *TreatStats_DataPoint) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TreatStats_DataPoint) GetTotalPoints() int32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

func (x *TreatStats_DataPoint) GetPointsByType() map[string]int32 {
	if x != nil {
		return x.PointsByType
	}
	return nil
}

var File_treat_proto protoreflect.FileDescriptor

const file_treat_proto_rawDesc = "" +
	"\n" +
	"\vtreat.proto\x12\x05treat\x1a\fcommon.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe3\x04\n" +
	"\x05Treat\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"treat_type\x18\x03 \x01(\tR\ttreatType\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x16\n" +
	"\x06points\x18\x06 \x01(\x05R\x06points\x12\x1b\n" +
	"\timage_url\x18\a \x01(\tR\bimageUrl\x12\x1d\n" +
	"\n" +
	"awarded_by\x18\b \x01(\tR\tawardedBy\x12%\n" +
	"\x0eapplication_id\x18\t \x01(\tR\rapplicationId\x126\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2\x1a.treat.Treat.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"awarded_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tawardedAt\x129\n" +
	"\n" +
	"expires_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xba\x03\n" +
	"\x11AwardTreatRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"treat_type\x18\x02 \x01(\tR\ttreatType\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06points\x18\x05 \x01(\x05R\x06points\x12\x1b\n" +
	"\timage_url\x18\x06 \x01(\tR\bimageUrl\x12\x1d\n" +
	"\n" +
	"awarded_by\x18\a \x01(\tR\tawardedBy\x12%\n" +
	"\x0eapplication_id\x18\b \x01(\tR\rapplicationId\x12B\n" +
	"\bmetadata\x18\t \x03(\v2&.treat.AwardTreatRequest.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"expires_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"c\n" +
	"\rTreatResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x12\"\n" +
	"\x05treat\x18\x02 \x01(\v2\f.treat.TreatR\x05treat\"!\n" +
	"\x0fGetTreatRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xce\x02\n" +
	"\x12UpdateTreatRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06points\x18\x04 \x01(\x05R\x06points\x12\x1b\n" +
	"\timage_url\x18\x05 \x01(\tR\bimageUrl\x12C\n" +
	"\bmetadata\x18\x06 \x03(\v2'.treat.UpdateTreatRequest.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"$\n" +
	"\x12DeleteTreatRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xae\x03\n" +
	"\x11ListTreatsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"treat_type\x18\x02 \x01(\tR\ttreatType\x12%\n" +
	"\x0eapplication_id\x18\x03 \x01(\tR\rapplicationId\x127\n" +
	"\tfrom_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bfromDate\x123\n" +
	"\ato_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06toDate\x12'\n" +
	"\x0finclude_expired\x18\x06 \x01(\bR\x0eincludeExpired\x12\x1d\n" +
	"\n" +
	"min_points\x18\a \x01(\x05R\tminPoints\x12\x1d\n" +
	"\n" +
	"max_points\x18\b \x01(\x05R\tmaxPoints\x12\x12\n" +
	"\x04page\x18\t \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\n" +
	" \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\v \x01(\tR\x06sortBy\x12\x1b\n" +
	"\tsort_desc\x18\f \x01(\bR\bsortDesc\"\xbc\x01\n" +
	"\x12ListTreatsResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x12$\n" +
	"\x06treats\x18\x02 \x03(\v2\f.treat.TreatR\x06treats\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"\xcb\x01\n" +
	"\x1bGetUserTreatsSummaryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\x127\n" +
	"\tfrom_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bfromDate\x123\n" +
	"\ato_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06toDate\"\x9e\x03\n" +
	"\rTreatsSummary\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\ftotal_treats\x18\x02 \x01(\x05R\vtotalTreats\x12!\n" +
	"\ftotal_points\x18\x03 \x01(\x05R\vtotalPoints\x12L\n" +
	"\x0epoints_by_type\x18\x04 \x03(\v2&.treat.TreatsSummary.PointsByTypeEntryR\fpointsByType\x121\n" +
	"\rrecent_treats\x18\x05 \x03(\v2\f.treat.TreatR\frecentTreats\x127\n" +
	"\tfrom_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bfromDate\x123\n" +
	"\ato_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x06toDate\x1a?\n" +
	"\x11PointsByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"w\n" +
	"\x15TreatsSummaryResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x12.\n" +
	"\asummary\x18\x02 \x01(\v2\x14.treat.TreatsSummaryR\asummary\"\x82\x02\n" +
	"\x14GetTreatStatsRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x127\n" +
	"\tfrom_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bfromDate\x123\n" +
	"\ato_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06toDate\x12\x19\n" +
	"\bgroup_by\x18\x04 \x01(\tR\agroupBy\x12\x19\n" +
	"\buser_ids\x18\x05 \x03(\tR\auserIds\x12\x1f\n" +
	"\vtreat_types\x18\x06 \x03(\tR\n" +
	"treatTypes\"\xa0\x05\n" +
	"\n" +
	"TreatStats\x12<\n" +
	"\vdata_points\x18\x01 \x03(\v2\x1b.treat.TreatStats.DataPointR\n" +
	"dataPoints\x12!\n" +
	"\ftotal_treats\x18\x02 \x01(\x05R\vtotalTreats\x12!\n" +
	"\ftotal_points\x18\x03 \x01(\x05R\vtotalPoints\x12!\n" +
	"\funique_users\x18\x04 \x01(\x05R\vuniqueUsers\x12I\n" +
	"\x0epoints_by_type\x18\x05 \x03(\v2#.treat.TreatStats.PointsByTypeEntryR\fpointsByType\x127\n" +
	"\tfrom_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bfromDate\x123\n" +
	"\ato_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x06toDate\x1a\xf0\x01\n" +
	"\tDataPoint\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12!\n" +
	"\ftotal_points\x18\x03 \x01(\x05R\vtotalPoints\x12S\n" +
	"\x0epoints_by_type\x18\x04 \x03(\v2-.treat.TreatStats.DataPoint.PointsByTypeEntryR\fpointsByType\x1a?\n" +
	"\x11PointsByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a?\n" +
	"\x11PointsByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"m\n" +
	"\x12TreatStatsResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x12'\n" +
	"\x05stats\x18\x02 \x01(\v2\x11.treat.TreatStatsR\x05stats2\xee\x03\n" +
	"\fTreatService\x12<\n" +
	"\n" +
	"AwardTreat\x12\x18.treat.AwardTreatRequest\x1a\x14.treat.TreatResponse\x128\n" +
	"\bGetTreat\x12\x16.treat.GetTreatRequest\x1a\x14.treat.TreatResponse\x12>\n" +
	"\vUpdateTreat\x12\x19.treat.UpdateTreatRequest\x1a\x14.treat.TreatResponse\x12@\n" +
	"\vDeleteTreat\x12\x19.treat.DeleteTreatRequest\x1a\x16.common.ResponseStatus\x12A\n" +
	"\n" +
	"ListTreats\x12\x18.treat.ListTreatsRequest\x1a\x19.treat.ListTreatsResponse\x12X\n" +
	"\x14GetUserTreatsSummary\x12\".treat.GetUserTreatsSummaryRequest\x1a\x1c.treat.TreatsSummaryResponse\x12G\n" +
	"\rGetTreatStats\x12\x1b.treat.GetTreatStatsRequest\x1a\x19.treat.TreatStatsResponseB)Z'github.com/wolfymaster/woofx3/db/gen/v1b\x06proto3"

var (
	file_treat_proto_rawDescOnce sync.Once
	file_treat_proto_rawDescData []byte
)

func file_treat_proto_rawDescGZIP() []byte {
	file_treat_proto_rawDescOnce.Do(func() {
		file_treat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_treat_proto_rawDesc), len(file_treat_proto_rawDesc)))
	})
	return file_treat_proto_rawDescData
}

var file_treat_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_treat_proto_goTypes = []any{
	(*Treat)(nil),                       // 0: treat.Treat
	(*AwardTreatRequest)(nil),           // 1: treat.AwardTreatRequest
	(*TreatResponse)(nil),               // 2: treat.TreatResponse
	(*GetTreatRequest)(nil),             // 3: treat.GetTreatRequest
	(*UpdateTreatRequest)(nil),          // 4: treat.UpdateTreatRequest
	(*DeleteTreatRequest)(nil),          // 5: treat.DeleteTreatRequest
	(*ListTreatsRequest)(nil),           // 6: treat.ListTreatsRequest
	(*ListTreatsResponse)(nil),          // 7: treat.ListTreatsResponse
	(*GetUserTreatsSummaryRequest)(nil), // 8: treat.GetUserTreatsSummaryRequest
	(*TreatsSummary)(nil),               // 9: treat.TreatsSummary
	(*TreatsSummaryResponse)(nil),       // 10: treat.TreatsSummaryResponse
	(*GetTreatStatsRequest)(nil),        // 11: treat.GetTreatStatsRequest
	(*TreatStats)(nil),                  // 12: treat.TreatStats
	(*TreatStatsResponse)(nil),          // 13: treat.TreatStatsResponse
	nil,                                 // 14: treat.Treat.MetadataEntry
	nil,                                 // 15: treat.AwardTreatRequest.MetadataEntry
	nil,                                 // 16: treat.UpdateTreatRequest.MetadataEntry
	nil,                                 // 17: treat.TreatsSummary.PointsByTypeEntry
	(*TreatStats_DataPoint)(nil),        // 18: treat.TreatStats.DataPoint
	nil,                                 // 19: treat.TreatStats.PointsByTypeEntry
	nil,                                 // 20: treat.TreatStats.DataPoint.PointsByTypeEntry
	(*timestamppb.Timestamp)(nil),       // 21: google.protobuf.Timestamp
	(*ResponseStatus)(nil),              // 22: common.ResponseStatus
}
var file_treat_proto_depIdxs = []int32{
	14, // 0: treat.Treat.metadata:type_name -> treat.Treat.MetadataEntry
	21, // 1: treat.Treat.awarded_at:type_name -> google.protobuf.Timestamp
	21, // 2: treat.Treat.expires_at:type_name -> google.protobuf.Timestamp
	21, // 3: treat.Treat.created_at:type_name -> google.protobuf.Timestamp
	21, // 4: treat.Treat.updated_at:type_name -> google.protobuf.Timestamp
	15, // 5: treat.AwardTreatRequest.metadata:type_name -> treat.AwardTreatRequest.MetadataEntry
	21, // 6: treat.AwardTreatRequest.expires_at:type_name -> google.protobuf.Timestamp
	22, // 7: treat.TreatResponse.status:type_name -> common.ResponseStatus
	0,  // 8: treat.TreatResponse.treat:type_name -> treat.Treat
	16, // 9: treat.UpdateTreatRequest.metadata:type_name -> treat.UpdateTreatRequest.MetadataEntry
	21, // 10: treat.UpdateTreatRequest.expires_at:type_name -> google.protobuf.Timestamp
	21, // 11: treat.ListTreatsRequest.from_date:type_name -> google.protobuf.Timestamp
	21, // 12: treat.ListTreatsRequest.to_date:type_name -> google.protobuf.Timestamp
	22, // 13: treat.ListTreatsResponse.status:type_name -> common.ResponseStatus
	0,  // 14: treat.ListTreatsResponse.treats:type_name -> treat.Treat
	21, // 15: treat.GetUserTreatsSummaryRequest.from_date:type_name -> google.protobuf.Timestamp
	21, // 16: treat.GetUserTreatsSummaryRequest.to_date:type_name -> google.protobuf.Timestamp
	17, // 17: treat.TreatsSummary.points_by_type:type_name -> treat.TreatsSummary.PointsByTypeEntry
	0,  // 18: treat.TreatsSummary.recent_treats:type_name -> treat.Treat
	21, // 19: treat.TreatsSummary.from_date:type_name -> google.protobuf.Timestamp
	21, // 20: treat.TreatsSummary.to_date:type_name -> google.protobuf.Timestamp
	22, // 21: treat.TreatsSummaryResponse.status:type_name -> common.ResponseStatus
	9,  // 22: treat.TreatsSummaryResponse.summary:type_name -> treat.TreatsSummary
	21, // 23: treat.GetTreatStatsRequest.from_date:type_name -> google.protobuf.Timestamp
	21, // 24: treat.GetTreatStatsRequest.to_date:type_name -> google.protobuf.Timestamp
	18, // 25: treat.TreatStats.data_points:type_name -> treat.TreatStats.DataPoint
	19, // 26: treat.TreatStats.points_by_type:type_name -> treat.TreatStats.PointsByTypeEntry
	21, // 27: treat.TreatStats.from_date:type_name -> google.protobuf.Timestamp
	21, // 28: treat.TreatStats.to_date:type_name -> google.protobuf.Timestamp
	22, // 29: treat.TreatStatsResponse.status:type_name -> common.ResponseStatus
	12, // 30: treat.TreatStatsResponse.stats:type_name -> treat.TreatStats
	20, // 31: treat.TreatStats.DataPoint.points_by_type:type_name -> treat.TreatStats.DataPoint.PointsByTypeEntry
	1,  // 32: treat.TreatService.AwardTreat:input_type -> treat.AwardTreatRequest
	3,  // 33: treat.TreatService.GetTreat:input_type -> treat.GetTreatRequest
	4,  // 34: treat.TreatService.UpdateTreat:input_type -> treat.UpdateTreatRequest
	5,  // 35: treat.TreatService.DeleteTreat:input_type -> treat.DeleteTreatRequest
	6,  // 36: treat.TreatService.ListTreats:input_type -> treat.ListTreatsRequest
	8,  // 37: treat.TreatService.GetUserTreatsSummary:input_type -> treat.GetUserTreatsSummaryRequest
	11, // 38: treat.TreatService.GetTreatStats:input_type -> treat.GetTreatStatsRequest
	2,  // 39: treat.TreatService.AwardTreat:output_type -> treat.TreatResponse
	2,  // 40: treat.TreatService.GetTreat:output_type -> treat.TreatResponse
	2,  // 41: treat.TreatService.UpdateTreat:output_type -> treat.TreatResponse
	22, // 42: treat.TreatService.DeleteTreat:output_type -> common.ResponseStatus
	7,  // 43: treat.TreatService.ListTreats:output_type -> treat.ListTreatsResponse
	10, // 44: treat.TreatService.GetUserTreatsSummary:output_type -> treat.TreatsSummaryResponse
	13, // 45: treat.TreatService.GetTreatStats:output_type -> treat.TreatStatsResponse
	39, // [39:46] is the sub-list for method output_type
	32, // [32:39] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_treat_proto_init() }
func file_treat_proto_init() {
	if File_treat_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_treat_proto_rawDesc), len(file_treat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_treat_proto_goTypes,
		DependencyIndexes: file_treat_proto_depIdxs,
		MessageInfos:      file_treat_proto_msgTypes,
	}.Build()
	File_treat_proto = out.File
	file_treat_proto_goTypes = nil
	file_treat_proto_depIdxs = nil
}
