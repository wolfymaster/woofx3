// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: workflow.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Workflow definition
type Workflow struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                         // Unique identifier
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                     // Human-readable name
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                       // Description of the workflow
	ApplicationId  string                 `protobuf:"bytes,4,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`                                              // ID of the application this workflow belongs to
	CreatedBy      string                 `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`                                                          // User ID who created the workflow
	Enabled        bool                   `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`                                                                              // Whether the workflow is enabled
	Steps          []*WorkflowStep        `protobuf:"bytes,7,rep,name=steps,proto3" json:"steps,omitempty"`                                                                                   // Steps in the workflow
	Variables      map[string]string      `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Default variables for the workflow
	OnSuccess      string                 `protobuf:"bytes,9,opt,name=on_success,json=onSuccess,proto3" json:"on_success,omitempty"`                                                          // ID of the next workflow to execute on success
	OnFailure      string                 `protobuf:"bytes,10,opt,name=on_failure,json=onFailure,proto3" json:"on_failure,omitempty"`                                                         // ID of the next workflow to execute on failure
	MaxRetries     int32                  `protobuf:"varint,11,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`                                                     // Maximum number of retries for failed steps
	TimeoutSeconds int32                  `protobuf:"varint,12,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`                                         // Global timeout for the workflow in seconds
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_workflow_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{0}
}

func (x *Workflow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Workflow) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *Workflow) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Workflow) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Workflow) GetSteps() []*WorkflowStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Workflow) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Workflow) GetOnSuccess() string {
	if x != nil {
		return x.OnSuccess
	}
	return ""
}

func (x *Workflow) GetOnFailure() string {
	if x != nil {
		return x.OnFailure
	}
	return ""
}

func (x *Workflow) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *Workflow) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *Workflow) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Workflow) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// A single step in a workflow
type WorkflowStep struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                           // Unique identifier for the step
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                       // Human-readable name
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                         // Description of the step
	Type           string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                                                                       // Type of step (e.g., "command", "http", "condition")
	Parameters     map[string]string      `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Step-specific parameters
	OnSuccess      string                 `protobuf:"bytes,6,opt,name=on_success,json=onSuccess,proto3" json:"on_success,omitempty"`                                                            // ID of the next step on success
	OnFailure      string                 `protobuf:"bytes,7,opt,name=on_failure,json=onFailure,proto3" json:"on_failure,omitempty"`                                                            // ID of the next step on failure
	TimeoutSeconds int32                  `protobuf:"varint,8,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`                                            // Step-specific timeout in seconds
	RetryAttempts  int32                  `protobuf:"varint,9,opt,name=retry_attempts,json=retryAttempts,proto3" json:"retry_attempts,omitempty"`                                               // Number of retry attempts for this step
	Async          bool                   `protobuf:"varint,10,opt,name=async,proto3" json:"async,omitempty"`                                                                                   // Whether to execute this step asynchronously
	Outputs        map[string]string      `protobuf:"bytes,11,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`      // Output variable mappings
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkflowStep) Reset() {
	*x = WorkflowStep{}
	mi := &file_workflow_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStep) ProtoMessage() {}

func (x *WorkflowStep) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStep.ProtoReflect.Descriptor instead.
func (*WorkflowStep) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowStep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowStep) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WorkflowStep) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *WorkflowStep) GetOnSuccess() string {
	if x != nil {
		return x.OnSuccess
	}
	return ""
}

func (x *WorkflowStep) GetOnFailure() string {
	if x != nil {
		return x.OnFailure
	}
	return ""
}

func (x *WorkflowStep) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *WorkflowStep) GetRetryAttempts() int32 {
	if x != nil {
		return x.RetryAttempts
	}
	return 0
}

func (x *WorkflowStep) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

func (x *WorkflowStep) GetOutputs() map[string]string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// Workflow execution
type WorkflowExecution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                     // Unique identifier for the execution
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`                                                   // ID of the workflow being executed
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                                                             // Current status (pending, running, completed, failed, cancelled)
	StartedBy     string                 `protobuf:"bytes,4,opt,name=started_by,json=startedBy,proto3" json:"started_by,omitempty"`                                                      // User ID who triggered the execution
	ApplicationId string                 `protobuf:"bytes,5,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`                                          // ID of the application
	Inputs        map[string]string      `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`   // Input variables for the workflow
	Outputs       map[string]string      `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Output variables from the workflow
	Error         string                 `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`                                                                               // Error message if the execution failed
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Steps         []*ExecutionStep       `protobuf:"bytes,13,rep,name=steps,proto3" json:"steps,omitempty"` // Execution details for each step
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowExecution) Reset() {
	*x = WorkflowExecution{}
	mi := &file_workflow_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowExecution) ProtoMessage() {}

func (x *WorkflowExecution) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowExecution.ProtoReflect.Descriptor instead.
func (*WorkflowExecution) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{2}
}

func (x *WorkflowExecution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowExecution) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowExecution) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkflowExecution) GetStartedBy() string {
	if x != nil {
		return x.StartedBy
	}
	return ""
}

func (x *WorkflowExecution) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *WorkflowExecution) GetInputs() map[string]string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *WorkflowExecution) GetOutputs() map[string]string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WorkflowExecution) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *WorkflowExecution) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *WorkflowExecution) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *WorkflowExecution) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowExecution) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *WorkflowExecution) GetSteps() []*ExecutionStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

// Execution details for a single step
type ExecutionStep struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StepId        string                 `protobuf:"bytes,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`                                                               // ID of the workflow step
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                 // Name of the step
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                                                             // Current status (pending, running, completed, failed, skipped)
	Attempt       int32                  `protobuf:"varint,4,opt,name=attempt,proto3" json:"attempt,omitempty"`                                                                          // Current attempt number (1-based)
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`                                                                               // Error message if the step failed
	Inputs        map[string]string      `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`   // Input variables for the step
	Outputs       map[string]string      `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Output variables from the step
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	DurationMs    int64                  `protobuf:"varint,10,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"` // Duration in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionStep) Reset() {
	*x = ExecutionStep{}
	mi := &file_workflow_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStep) ProtoMessage() {}

func (x *ExecutionStep) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStep.ProtoReflect.Descriptor instead.
func (*ExecutionStep) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{3}
}

func (x *ExecutionStep) GetStepId() string {
	if x != nil {
		return x.StepId
	}
	return ""
}

func (x *ExecutionStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecutionStep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExecutionStep) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *ExecutionStep) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExecutionStep) GetInputs() map[string]string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ExecutionStep) GetOutputs() map[string]string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *ExecutionStep) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ExecutionStep) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *ExecutionStep) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// Request to create a new workflow
type CreateWorkflowRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ApplicationId  string                 `protobuf:"bytes,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CreatedBy      string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Enabled        bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Steps          []*WorkflowStep        `protobuf:"bytes,6,rep,name=steps,proto3" json:"steps,omitempty"`
	Variables      map[string]string      `protobuf:"bytes,7,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	OnSuccess      string                 `protobuf:"bytes,8,opt,name=on_success,json=onSuccess,proto3" json:"on_success,omitempty"`
	OnFailure      string                 `protobuf:"bytes,9,opt,name=on_failure,json=onFailure,proto3" json:"on_failure,omitempty"`
	MaxRetries     int32                  `protobuf:"varint,10,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,11,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{4}
}

func (x *CreateWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkflowRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateWorkflowRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *CreateWorkflowRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CreateWorkflowRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateWorkflowRequest) GetSteps() []*WorkflowStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *CreateWorkflowRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CreateWorkflowRequest) GetOnSuccess() string {
	if x != nil {
		return x.OnSuccess
	}
	return ""
}

func (x *CreateWorkflowRequest) GetOnFailure() string {
	if x != nil {
		return x.OnFailure
	}
	return ""
}

func (x *CreateWorkflowRequest) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *CreateWorkflowRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// Request to get a workflow by ID
type GetWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{5}
}

func (x *GetWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response containing a single workflow
type WorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Workflow      *Workflow              `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowResponse) Reset() {
	*x = WorkflowResponse{}
	mi := &file_workflow_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowResponse) ProtoMessage() {}

func (x *WorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowResponse.ProtoReflect.Descriptor instead.
func (*WorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *WorkflowResponse) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

// Request to update an existing workflow
type UpdateWorkflowRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Enabled        bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Steps          []*WorkflowStep        `protobuf:"bytes,5,rep,name=steps,proto3" json:"steps,omitempty"`
	Variables      map[string]string      `protobuf:"bytes,6,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	OnSuccess      string                 `protobuf:"bytes,7,opt,name=on_success,json=onSuccess,proto3" json:"on_success,omitempty"`
	OnFailure      string                 `protobuf:"bytes,8,opt,name=on_failure,json=onFailure,proto3" json:"on_failure,omitempty"`
	MaxRetries     int32                  `protobuf:"varint,9,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,10,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateWorkflowRequest) Reset() {
	*x = UpdateWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowRequest) ProtoMessage() {}

func (x *UpdateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateWorkflowRequest) GetSteps() []*WorkflowStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *UpdateWorkflowRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *UpdateWorkflowRequest) GetOnSuccess() string {
	if x != nil {
		return x.OnSuccess
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetOnFailure() string {
	if x != nil {
		return x.OnFailure
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *UpdateWorkflowRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// Request to delete a workflow
type DeleteWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowRequest) Reset() {
	*x = DeleteWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowRequest) ProtoMessage() {}

func (x *DeleteWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to list workflows
type ListWorkflowsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId   string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	IncludeDisabled bool                   `protobuf:"varint,2,opt,name=include_disabled,json=includeDisabled,proto3" json:"include_disabled,omitempty"`
	Page            int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize        int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy          string                 `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`        // Field to sort by (e.g., "name", "created_at")
	SortDesc        bool                   `protobuf:"varint,6,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"` // Whether to sort in descending order
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_workflow_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{9}
}

func (x *ListWorkflowsRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ListWorkflowsRequest) GetIncludeDisabled() bool {
	if x != nil {
		return x.IncludeDisabled
	}
	return false
}

func (x *ListWorkflowsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWorkflowsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorkflowsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListWorkflowsRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// Response containing a list of workflows
type ListWorkflowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Workflows     []*Workflow            `protobuf:"bytes,2,rep,name=workflows,proto3" json:"workflows,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	mi := &file_workflow_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{10}
}

func (x *ListWorkflowsResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListWorkflowsResponse) GetWorkflows() []*Workflow {
	if x != nil {
		return x.Workflows
	}
	return nil
}

func (x *ListWorkflowsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListWorkflowsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWorkflowsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Request to execute a workflow
type ExecuteWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`                                                 // ID of the workflow to execute
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`                                        // ID of the application
	StartedBy     string                 `protobuf:"bytes,3,opt,name=started_by,json=startedBy,proto3" json:"started_by,omitempty"`                                                    // User ID who triggered the execution
	Inputs        map[string]string      `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Input variables for the workflow
	Async         bool                   `protobuf:"varint,5,opt,name=async,proto3" json:"async,omitempty"`                                                                            // Whether to execute asynchronously
	CorrelationId string                 `protobuf:"bytes,6,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`                                        // Correlation ID for tracing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteWorkflowRequest) Reset() {
	*x = ExecuteWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteWorkflowRequest) ProtoMessage() {}

func (x *ExecuteWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteWorkflowRequest.ProtoReflect.Descriptor instead.
func (*ExecuteWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ExecuteWorkflowRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ExecuteWorkflowRequest) GetStartedBy() string {
	if x != nil {
		return x.StartedBy
	}
	return ""
}

func (x *ExecuteWorkflowRequest) GetInputs() map[string]string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ExecuteWorkflowRequest) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

func (x *ExecuteWorkflowRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// Response from executing a workflow
type ExecuteWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ExecutionId   string                 `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`                                                // ID of the workflow execution
	Async         bool                   `protobuf:"varint,3,opt,name=async,proto3" json:"async,omitempty"`                                                                              // Whether the execution is running asynchronously
	StatusUrl     string                 `protobuf:"bytes,4,opt,name=status_url,json=statusUrl,proto3" json:"status_url,omitempty"`                                                      // URL to check the status of the execution
	Outputs       map[string]string      `protobuf:"bytes,5,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Output variables (if execution completed synchronously)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteWorkflowResponse) Reset() {
	*x = ExecuteWorkflowResponse{}
	mi := &file_workflow_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteWorkflowResponse) ProtoMessage() {}

func (x *ExecuteWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteWorkflowResponse.ProtoReflect.Descriptor instead.
func (*ExecuteWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{12}
}

func (x *ExecuteWorkflowResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExecuteWorkflowResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecuteWorkflowResponse) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

func (x *ExecuteWorkflowResponse) GetStatusUrl() string {
	if x != nil {
		return x.StatusUrl
	}
	return ""
}

func (x *ExecuteWorkflowResponse) GetOutputs() map[string]string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// Request to get a workflow execution
type GetWorkflowExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Execution ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRequest) Reset() {
	*x = GetWorkflowExecutionRequest{}
	mi := &file_workflow_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRequest) ProtoMessage() {}

func (x *GetWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{13}
}

func (x *GetWorkflowExecutionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response containing workflow execution details
type WorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Execution     *WorkflowExecution     `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowExecutionResponse) Reset() {
	*x = WorkflowExecutionResponse{}
	mi := &file_workflow_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowExecutionResponse) ProtoMessage() {}

func (x *WorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*WorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{14}
}

func (x *WorkflowExecutionResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *WorkflowExecutionResponse) GetExecution() *WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

// Request to list workflow executions
type ListWorkflowExecutionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`          // Filter by workflow ID
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"` // Filter by application ID
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                    // Filter by status
	StartedBy     string                 `protobuf:"bytes,4,opt,name=started_by,json=startedBy,proto3" json:"started_by,omitempty"`             // Filter by user who started the execution
	From          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`                                        // Filter by start time (inclusive)
	To            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`                                            // Filter by end time (inclusive)
	Page          int32                  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy        string                 `protobuf:"bytes,9,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`         // Field to sort by (e.g., "started_at", "completed_at")
	SortDesc      bool                   `protobuf:"varint,10,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"` // Whether to sort in descending order
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowExecutionsRequest) Reset() {
	*x = ListWorkflowExecutionsRequest{}
	mi := &file_workflow_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowExecutionsRequest) ProtoMessage() {}

func (x *ListWorkflowExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{15}
}

func (x *ListWorkflowExecutionsRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ListWorkflowExecutionsRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ListWorkflowExecutionsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListWorkflowExecutionsRequest) GetStartedBy() string {
	if x != nil {
		return x.StartedBy
	}
	return ""
}

func (x *ListWorkflowExecutionsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListWorkflowExecutionsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ListWorkflowExecutionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWorkflowExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorkflowExecutionsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListWorkflowExecutionsRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// Response containing a list of workflow executions
type ListWorkflowExecutionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Executions    []*WorkflowExecution   `protobuf:"bytes,2,rep,name=executions,proto3" json:"executions,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowExecutionsResponse) Reset() {
	*x = ListWorkflowExecutionsResponse{}
	mi := &file_workflow_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowExecutionsResponse) ProtoMessage() {}

func (x *ListWorkflowExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{16}
}

func (x *ListWorkflowExecutionsResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListWorkflowExecutionsResponse) GetExecutions() []*WorkflowExecution {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *ListWorkflowExecutionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListWorkflowExecutionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWorkflowExecutionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Request to cancel a workflow execution
type CancelWorkflowExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Execution ID
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // Optional reason for cancellation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelWorkflowExecutionRequest) Reset() {
	*x = CancelWorkflowExecutionRequest{}
	mi := &file_workflow_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWorkflowExecutionRequest) ProtoMessage() {}

func (x *CancelWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*CancelWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{17}
}

func (x *CancelWorkflowExecutionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CancelWorkflowExecutionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_workflow_proto protoreflect.FileDescriptor

const file_workflow_proto_rawDesc = "" +
	"\n" +
	"\x0eworkflow.proto\x12\bworkflow\x1a\fcommon.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdb\x04\n" +
	"\bWorkflow\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12%\n" +
	"\x0eapplication_id\x18\x04 \x01(\tR\rapplicationId\x12\x1d\n" +
	"\n" +
	"created_by\x18\x05 \x01(\tR\tcreatedBy\x12\x18\n" +
	"\aenabled\x18\x06 \x01(\bR\aenabled\x12,\n" +
	"\x05steps\x18\a \x03(\v2\x16.workflow.WorkflowStepR\x05steps\x12?\n" +
	"\tvariables\x18\b \x03(\v2!.workflow.Workflow.VariablesEntryR\tvariables\x12\x1d\n" +
	"\n" +
	"on_success\x18\t \x01(\tR\tonSuccess\x12\x1d\n" +
	"\n" +
	"on_failure\x18\n" +
	" \x01(\tR\tonFailure\x12\x1f\n" +
	"\vmax_retries\x18\v \x01(\x05R\n" +
	"maxRetries\x12'\n" +
	"\x0ftimeout_seconds\x18\f \x01(\x05R\x0etimeoutSeconds\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8e\x04\n" +
	"\fWorkflowStep\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12F\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2&.workflow.WorkflowStep.ParametersEntryR\n" +
	"parameters\x12\x1d\n" +
	"\n" +
	"on_success\x18\x06 \x01(\tR\tonSuccess\x12\x1d\n" +
	"\n" +
	"on_failure\x18\a \x01(\tR\tonFailure\x12'\n" +
	"\x0ftimeout_seconds\x18\b \x01(\x05R\x0etimeoutSeconds\x12%\n" +
	"\x0eretry_attempts\x18\t \x01(\x05R\rretryAttempts\x12\x14\n" +
	"\x05async\x18\n" +
	" \x01(\bR\x05async\x12=\n" +
	"\aoutputs\x18\v \x03(\v2#.workflow.WorkflowStep.OutputsEntryR\aoutputs\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOutputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\x05\n" +
	"\x11WorkflowExecution\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"started_by\x18\x04 \x01(\tR\tstartedBy\x12%\n" +
	"\x0eapplication_id\x18\x05 \x01(\tR\rapplicationId\x12?\n" +
	"\x06inputs\x18\x06 \x03(\v2'.workflow.WorkflowExecution.InputsEntryR\x06inputs\x12B\n" +
	"\aoutputs\x18\a \x03(\v2(.workflow.WorkflowExecution.OutputsEntryR\aoutputs\x12\x14\n" +
	"\x05error\x18\b \x01(\tR\x05error\x129\n" +
	"\n" +
	"started_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12-\n" +
	"\x05steps\x18\r \x03(\v2\x17.workflow.ExecutionStepR\x05steps\x1a9\n" +
	"\vInputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOutputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x04\n" +
	"\rExecutionStep\x12\x17\n" +
	"\astep_id\x18\x01 \x01(\tR\x06stepId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\aattempt\x18\x04 \x01(\x05R\aattempt\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12;\n" +
	"\x06inputs\x18\x06 \x03(\v2#.workflow.ExecutionStep.InputsEntryR\x06inputs\x12>\n" +
	"\aoutputs\x18\a \x03(\v2$.workflow.ExecutionStep.OutputsEntryR\aoutputs\x129\n" +
	"\n" +
	"started_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vduration_ms\x18\n" +
	" \x01(\x03R\n" +
	"durationMs\x1a9\n" +
	"\vInputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOutputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xef\x03\n" +
	"\x15CreateWorkflowRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12%\n" +
	"\x0eapplication_id\x18\x03 \x01(\tR\rapplicationId\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12,\n" +
	"\x05steps\x18\x06 \x03(\v2\x16.workflow.WorkflowStepR\x05steps\x12L\n" +
	"\tvariables\x18\a \x03(\v2..workflow.CreateWorkflowRequest.VariablesEntryR\tvariables\x12\x1d\n" +
	"\n" +
	"on_success\x18\b \x01(\tR\tonSuccess\x12\x1d\n" +
	"\n" +
	"on_failure\x18\t \x01(\tR\tonFailure\x12\x1f\n" +
	"\vmax_retries\x18\n" +
	" \x01(\x05R\n" +
	"maxRetries\x12'\n" +
	"\x0ftimeout_seconds\x18\v \x01(\x05R\x0etimeoutSeconds\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"$\n" +
	"\x12GetWorkflowRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"r\n" +
	"\x10WorkflowResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x12.\n" +
	"\bworkflow\x18\x02 \x01(\v2\x12.workflow.WorkflowR\bworkflow\"\xb9\x03\n" +
	"\x15UpdateWorkflowRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x12,\n" +
	"\x05steps\x18\x05 \x03(\v2\x16.workflow.WorkflowStepR\x05steps\x12L\n" +
	"\tvariables\x18\x06 \x03(\v2..workflow.UpdateWorkflowRequest.VariablesEntryR\tvariables\x12\x1d\n" +
	"\n" +
	"on_success\x18\a \x01(\tR\tonSuccess\x12\x1d\n" +
	"\n" +
	"on_failure\x18\b \x01(\tR\tonFailure\x12\x1f\n" +
	"\vmax_retries\x18\t \x01(\x05R\n" +
	"maxRetries\x12'\n" +
	"\x0ftimeout_seconds\x18\n" +
	" \x01(\x05R\x0etimeoutSeconds\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"'\n" +
	"\x15DeleteWorkflowRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xcf\x01\n" +
	"\x14ListWorkflowsRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x12)\n" +
	"\x10include_disabled\x18\x02 \x01(\bR\x0fincludeDisabled\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x05 \x01(\tR\x06sortBy\x12\x1b\n" +
	"\tsort_desc\x18\x06 \x01(\bR\bsortDesc\"\xcb\x01\n" +
	"\x15ListWorkflowsResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x120\n" +
	"\tworkflows\x18\x02 \x03(\v2\x12.workflow.WorkflowR\tworkflows\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"\xbd\x02\n" +
	"\x16ExecuteWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\x12\x1d\n" +
	"\n" +
	"started_by\x18\x03 \x01(\tR\tstartedBy\x12D\n" +
	"\x06inputs\x18\x04 \x03(\v2,.workflow.ExecuteWorkflowRequest.InputsEntryR\x06inputs\x12\x14\n" +
	"\x05async\x18\x05 \x01(\bR\x05async\x12%\n" +
	"\x0ecorrelation_id\x18\x06 \x01(\tR\rcorrelationId\x1a9\n" +
	"\vInputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x02\n" +
	"\x17ExecuteWorkflowResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x12!\n" +
	"\fexecution_id\x18\x02 \x01(\tR\vexecutionId\x12\x14\n" +
	"\x05async\x18\x03 \x01(\bR\x05async\x12\x1d\n" +
	"\n" +
	"status_url\x18\x04 \x01(\tR\tstatusUrl\x12H\n" +
	"\aoutputs\x18\x05 \x03(\v2..workflow.ExecuteWorkflowResponse.OutputsEntryR\aoutputs\x1a:\n" +
	"\fOutputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"-\n" +
	"\x1bGetWorkflowExecutionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x86\x01\n" +
	"\x19WorkflowExecutionResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x129\n" +
	"\texecution\x18\x02 \x01(\v2\x1b.workflow.WorkflowExecutionR\texecution\"\xe1\x02\n" +
	"\x1dListWorkflowExecutionsRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"started_by\x18\x04 \x01(\tR\tstartedBy\x12.\n" +
	"\x04from\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x12\x12\n" +
	"\x04page\x18\a \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\b \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\t \x01(\tR\x06sortBy\x12\x1b\n" +
	"\tsort_desc\x18\n" +
	" \x01(\bR\bsortDesc\"\xdf\x01\n" +
	"\x1eListWorkflowExecutionsResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\v2\x16.common.ResponseStatusR\x06status\x12;\n" +
	"\n" +
	"executions\x18\x02 \x03(\v2\x1b.workflow.WorkflowExecutionR\n" +
	"executions\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"H\n" +
	"\x1eCancelWorkflowExecutionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason2\x9b\x06\n" +
	"\x0fWorkflowService\x12M\n" +
	"\x0eCreateWorkflow\x12\x1f.workflow.CreateWorkflowRequest\x1a\x1a.workflow.WorkflowResponse\x12G\n" +
	"\vGetWorkflow\x12\x1c.workflow.GetWorkflowRequest\x1a\x1a.workflow.WorkflowResponse\x12M\n" +
	"\x0eUpdateWorkflow\x12\x1f.workflow.UpdateWorkflowRequest\x1a\x1a.workflow.WorkflowResponse\x12I\n" +
	"\x0eDeleteWorkflow\x12\x1f.workflow.DeleteWorkflowRequest\x1a\x16.common.ResponseStatus\x12P\n" +
	"\rListWorkflows\x12\x1e.workflow.ListWorkflowsRequest\x1a\x1f.workflow.ListWorkflowsResponse\x12V\n" +
	"\x0fExecuteWorkflow\x12 .workflow.ExecuteWorkflowRequest\x1a!.workflow.ExecuteWorkflowResponse\x12b\n" +
	"\x14GetWorkflowExecution\x12%.workflow.GetWorkflowExecutionRequest\x1a#.workflow.WorkflowExecutionResponse\x12k\n" +
	"\x16ListWorkflowExecutions\x12'.workflow.ListWorkflowExecutionsRequest\x1a(.workflow.ListWorkflowExecutionsResponse\x12[\n" +
	"\x17CancelWorkflowExecution\x12(.workflow.CancelWorkflowExecutionRequest\x1a\x16.common.ResponseStatusB)Z'github.com/wolfymaster/woofx3/db/gen/v1b\x06proto3"

var (
	file_workflow_proto_rawDescOnce sync.Once
	file_workflow_proto_rawDescData []byte
)

func file_workflow_proto_rawDescGZIP() []byte {
	file_workflow_proto_rawDescOnce.Do(func() {
		file_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workflow_proto_rawDesc), len(file_workflow_proto_rawDesc)))
	})
	return file_workflow_proto_rawDescData
}

var file_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_workflow_proto_goTypes = []any{
	(*Workflow)(nil),                       // 0: workflow.Workflow
	(*WorkflowStep)(nil),                   // 1: workflow.WorkflowStep
	(*WorkflowExecution)(nil),              // 2: workflow.WorkflowExecution
	(*ExecutionStep)(nil),                  // 3: workflow.ExecutionStep
	(*CreateWorkflowRequest)(nil),          // 4: workflow.CreateWorkflowRequest
	(*GetWorkflowRequest)(nil),             // 5: workflow.GetWorkflowRequest
	(*WorkflowResponse)(nil),               // 6: workflow.WorkflowResponse
	(*UpdateWorkflowRequest)(nil),          // 7: workflow.UpdateWorkflowRequest
	(*DeleteWorkflowRequest)(nil),          // 8: workflow.DeleteWorkflowRequest
	(*ListWorkflowsRequest)(nil),           // 9: workflow.ListWorkflowsRequest
	(*ListWorkflowsResponse)(nil),          // 10: workflow.ListWorkflowsResponse
	(*ExecuteWorkflowRequest)(nil),         // 11: workflow.ExecuteWorkflowRequest
	(*ExecuteWorkflowResponse)(nil),        // 12: workflow.ExecuteWorkflowResponse
	(*GetWorkflowExecutionRequest)(nil),    // 13: workflow.GetWorkflowExecutionRequest
	(*WorkflowExecutionResponse)(nil),      // 14: workflow.WorkflowExecutionResponse
	(*ListWorkflowExecutionsRequest)(nil),  // 15: workflow.ListWorkflowExecutionsRequest
	(*ListWorkflowExecutionsResponse)(nil), // 16: workflow.ListWorkflowExecutionsResponse
	(*CancelWorkflowExecutionRequest)(nil), // 17: workflow.CancelWorkflowExecutionRequest
	nil,                                    // 18: workflow.Workflow.VariablesEntry
	nil,                                    // 19: workflow.WorkflowStep.ParametersEntry
	nil,                                    // 20: workflow.WorkflowStep.OutputsEntry
	nil,                                    // 21: workflow.WorkflowExecution.InputsEntry
	nil,                                    // 22: workflow.WorkflowExecution.OutputsEntry
	nil,                                    // 23: workflow.ExecutionStep.InputsEntry
	nil,                                    // 24: workflow.ExecutionStep.OutputsEntry
	nil,                                    // 25: workflow.CreateWorkflowRequest.VariablesEntry
	nil,                                    // 26: workflow.UpdateWorkflowRequest.VariablesEntry
	nil,                                    // 27: workflow.ExecuteWorkflowRequest.InputsEntry
	nil,                                    // 28: workflow.ExecuteWorkflowResponse.OutputsEntry
	(*timestamppb.Timestamp)(nil),          // 29: google.protobuf.Timestamp
	(*ResponseStatus)(nil),                 // 30: common.ResponseStatus
}
var file_workflow_proto_depIdxs = []int32{
	1,  // 0: workflow.Workflow.steps:type_name -> workflow.WorkflowStep
	18, // 1: workflow.Workflow.variables:type_name -> workflow.Workflow.VariablesEntry
	29, // 2: workflow.Workflow.created_at:type_name -> google.protobuf.Timestamp
	29, // 3: workflow.Workflow.updated_at:type_name -> google.protobuf.Timestamp
	19, // 4: workflow.WorkflowStep.parameters:type_name -> workflow.WorkflowStep.ParametersEntry
	20, // 5: workflow.WorkflowStep.outputs:type_name -> workflow.WorkflowStep.OutputsEntry
	21, // 6: workflow.WorkflowExecution.inputs:type_name -> workflow.WorkflowExecution.InputsEntry
	22, // 7: workflow.WorkflowExecution.outputs:type_name -> workflow.WorkflowExecution.OutputsEntry
	29, // 8: workflow.WorkflowExecution.started_at:type_name -> google.protobuf.Timestamp
	29, // 9: workflow.WorkflowExecution.completed_at:type_name -> google.protobuf.Timestamp
	29, // 10: workflow.WorkflowExecution.created_at:type_name -> google.protobuf.Timestamp
	29, // 11: workflow.WorkflowExecution.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 12: workflow.WorkflowExecution.steps:type_name -> workflow.ExecutionStep
	23, // 13: workflow.ExecutionStep.inputs:type_name -> workflow.ExecutionStep.InputsEntry
	24, // 14: workflow.ExecutionStep.outputs:type_name -> workflow.ExecutionStep.OutputsEntry
	29, // 15: workflow.ExecutionStep.started_at:type_name -> google.protobuf.Timestamp
	29, // 16: workflow.ExecutionStep.completed_at:type_name -> google.protobuf.Timestamp
	1,  // 17: workflow.CreateWorkflowRequest.steps:type_name -> workflow.WorkflowStep
	25, // 18: workflow.CreateWorkflowRequest.variables:type_name -> workflow.CreateWorkflowRequest.VariablesEntry
	30, // 19: workflow.WorkflowResponse.status:type_name -> common.ResponseStatus
	0,  // 20: workflow.WorkflowResponse.workflow:type_name -> workflow.Workflow
	1,  // 21: workflow.UpdateWorkflowRequest.steps:type_name -> workflow.WorkflowStep
	26, // 22: workflow.UpdateWorkflowRequest.variables:type_name -> workflow.UpdateWorkflowRequest.VariablesEntry
	30, // 23: workflow.ListWorkflowsResponse.status:type_name -> common.ResponseStatus
	0,  // 24: workflow.ListWorkflowsResponse.workflows:type_name -> workflow.Workflow
	27, // 25: workflow.ExecuteWorkflowRequest.inputs:type_name -> workflow.ExecuteWorkflowRequest.InputsEntry
	30, // 26: workflow.ExecuteWorkflowResponse.status:type_name -> common.ResponseStatus
	28, // 27: workflow.ExecuteWorkflowResponse.outputs:type_name -> workflow.ExecuteWorkflowResponse.OutputsEntry
	30, // 28: workflow.WorkflowExecutionResponse.status:type_name -> common.ResponseStatus
	2,  // 29: workflow.WorkflowExecutionResponse.execution:type_name -> workflow.WorkflowExecution
	29, // 30: workflow.ListWorkflowExecutionsRequest.from:type_name -> google.protobuf.Timestamp
	29, // 31: workflow.ListWorkflowExecutionsRequest.to:type_name -> google.protobuf.Timestamp
	30, // 32: workflow.ListWorkflowExecutionsResponse.status:type_name -> common.ResponseStatus
	2,  // 33: workflow.ListWorkflowExecutionsResponse.executions:type_name -> workflow.WorkflowExecution
	4,  // 34: workflow.WorkflowService.CreateWorkflow:input_type -> workflow.CreateWorkflowRequest
	5,  // 35: workflow.WorkflowService.GetWorkflow:input_type -> workflow.GetWorkflowRequest
	7,  // 36: workflow.WorkflowService.UpdateWorkflow:input_type -> workflow.UpdateWorkflowRequest
	8,  // 37: workflow.WorkflowService.DeleteWorkflow:input_type -> workflow.DeleteWorkflowRequest
	9,  // 38: workflow.WorkflowService.ListWorkflows:input_type -> workflow.ListWorkflowsRequest
	11, // 39: workflow.WorkflowService.ExecuteWorkflow:input_type -> workflow.ExecuteWorkflowRequest
	13, // 40: workflow.WorkflowService.GetWorkflowExecution:input_type -> workflow.GetWorkflowExecutionRequest
	15, // 41: workflow.WorkflowService.ListWorkflowExecutions:input_type -> workflow.ListWorkflowExecutionsRequest
	17, // 42: workflow.WorkflowService.CancelWorkflowExecution:input_type -> workflow.CancelWorkflowExecutionRequest
	6,  // 43: workflow.WorkflowService.CreateWorkflow:output_type -> workflow.WorkflowResponse
	6,  // 44: workflow.WorkflowService.GetWorkflow:output_type -> workflow.WorkflowResponse
	6,  // 45: workflow.WorkflowService.UpdateWorkflow:output_type -> workflow.WorkflowResponse
	30, // 46: workflow.WorkflowService.DeleteWorkflow:output_type -> common.ResponseStatus
	10, // 47: workflow.WorkflowService.ListWorkflows:output_type -> workflow.ListWorkflowsResponse
	12, // 48: workflow.WorkflowService.ExecuteWorkflow:output_type -> workflow.ExecuteWorkflowResponse
	14, // 49: workflow.WorkflowService.GetWorkflowExecution:output_type -> workflow.WorkflowExecutionResponse
	16, // 50: workflow.WorkflowService.ListWorkflowExecutions:output_type -> workflow.ListWorkflowExecutionsResponse
	30, // 51: workflow.WorkflowService.CancelWorkflowExecution:output_type -> common.ResponseStatus
	43, // [43:52] is the sub-list for method output_type
	34, // [34:43] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_workflow_proto_init() }
func file_workflow_proto_init() {
	if File_workflow_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workflow_proto_rawDesc), len(file_workflow_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workflow_proto_goTypes,
		DependencyIndexes: file_workflow_proto_depIdxs,
		MessageInfos:      file_workflow_proto_msgTypes,
	}.Build()
	File_workflow_proto = out.File
	file_workflow_proto_goTypes = nil
	file_workflow_proto_depIdxs = nil
}
